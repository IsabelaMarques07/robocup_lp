import javax.swing.JButton;
import javax.swing.JOptionPane;
import java.util.Random;
import javax.swing.UIManager;
import java.awt.*;

import java.util.Scanner;

public class ProgramaSalasv3 
{
	static String sala =""; 
	static StringBuffer strSalas = new StringBuffer();
	static int tamanhoMaior= 0;
	static int tamanho =0;
	static int qtListas=0;
	static int r, re;

	public static void main(String[] args) 
	{
		
		Scanner teclado = new Scanner(System.in);
		telaInicial();
		teclado.close();
	}
	
	public static void telaInicial() {
		
		UIManager.put("OptionPane.minimumSize", new Dimension(600, 100));// tamanho minimo da tela
		UIManager.put("OptionPane.buttonPadding", 1);//espaço entre os botoes
		int escolha; //resposta do usuário
		
				do {
					Object opcoes[] = { "Criar lista", 
										"Ter relação de salas", 
										"Excluir uma lista", 
										"Sair"};
					
					escolha = JOptionPane.showOptionDialog(null, 
													"O que deseja fazer agora?", 
													"Escolha!", 
													JOptionPane.YES_NO_OPTION, 
													JOptionPane.QUESTION_MESSAGE, 
													null, 
													opcoes, 
													opcoes[0]);
					

					if(escolha == 0) {
						escolherAndar();
					}
					
					if(escolha == 1)
					{
						criarListaUnica();
					}
					
					if(escolha == 2) 
					{
						excluirLista();
					}
				}while(escolha != 3);
	}
	
	public static void escolherAndar() {
   
		Object opcoes[] = { "Primeiro Andar", 
				"Segundo Andar", 
				"Terceiro Andar",
				"Quarto Andar",
				"Quinto Andar",
				"Sexto Andar"
				};
		

		int s = JOptionPane.showOptionDialog(null, 
				"Escolha um andar abaixo", 
				"Escolha!", 
				JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, 
				null, 
				opcoes, 
				opcoes[0]);
		
		adicionarLista(s);
	}
	
	public static void adicionarLista(int andar) {
		
		//SALAS DE CADA ANDAR
    // Porque não utilizar um array de String ou um ArrayList ?
		Object opcoes1[] = { "1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","Cancelar", "Andares", "Salvar"};
		Object opcoes2[] = {"18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","Cancelar", "Andares", "Salvar"};
		Object opcoes3[] = {"35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","Cancelar", "Andares", "Salvar"};
		Object opcoes4[] = {"52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","Cancelar", "Andares", "Salvar"};
		Object opcoes5[] = {"69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","Cancelar", "Andares", "Salvar"};
		Object opcoes6[] = {"86","87","88","89","90","91","92","93","94","95","96","97","98","99","Cancelar", "Andares", "Salvar"};
		
		int salaEscolhida = 0;
    // o codigo dentro de cada case poderia estar dentro de um metodo
		switch(andar) {
		case 0:
			do {
				
        //Esta parte especifica poderia estar em um metodo que recebe a sala (Primeiro, Segundo..)
        //e as opções como argumento exemplo: private String monstratDialogoSala(String sala, String[] opcoes)
				r = JOptionPane.showOptionDialog(null, 
						"Escolha a sala", 
						"SALAS DO PRIMEIRO ANDAR", 
						JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, 
						null, 
						opcoes1, 
						opcoes1[0]);
				
        //ao invés de utilizar numeros pode ser mais interessante utilizar alguma constante
        // para dar significado aos valores (private static final String SIGNIFICADO)
				if(r != 17 && r != 18 && r != 19) {
					salaEscolhida = r + 1;
					sala= sala + salaEscolhida+" ";
					tamanho++;
				}
				
			}while(r != 17 && r != 18 && r != 19);
			break;
			
		case 1:
			do{
				
				r = JOptionPane.showOptionDialog(null, 
						"Escolha a sala", 
						"SALAS DO SEGUNDO ANDAR", 
						JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, 
						null, 
						opcoes2, 
						opcoes2[0]);
				
				if(r != 17 && r != 18 && r != 19) {
					salaEscolhida = r + 18;
					sala= sala + salaEscolhida+" ";
					tamanho++;
				}
			}while(r != 17 && r != 18 && r != 19);

			break;
			
		case 2:
			do{
				
				r = JOptionPane.showOptionDialog(null, 
						"Escolha a sala", 
						"SALAS DO TERCEIRO ANDAR",
						JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, 
						null, 
						opcoes3, 
						opcoes3[0]);
				
				if(r != 17 && r != 18 && r != 19) {
					salaEscolhida = r + 35;
					sala= sala + salaEscolhida+" ";
					tamanho++;
				}
			}while(r != 17 && r != 18 && r != 19);
			break;
			
		case 3:
			do{
				
				r = JOptionPane.showOptionDialog(null, 
						"Escolha a sala", 
						"SALAS DO TERCEIRO ANDAR",
						JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, 
						null, 
						opcoes4, 
						opcoes4[0]);
				
				if(r != 17 && r != 18 && r != 19) {
					salaEscolhida = r + 52;
					sala= sala + salaEscolhida+" ";
					tamanho++;
				}
			}while(r != 17 && r != 18 && r != 19);
			break;
			
		case 4:
			do{
				
				r = JOptionPane.showOptionDialog(null, 
						"Escolha a sala", 
						"SALAS DO TERCEIRO ANDAR",
						JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, 
						null, 
						opcoes5, 
						opcoes5[0]);
				
				if(r != 17 && r != 18 && r != 19) {
					salaEscolhida = r + 69;
					sala= sala + salaEscolhida+" ";
					tamanho++;
				}
			}while(r != 17 && r != 18 && r != 19);
			break;
			
		case 5:
			do{
				//variavel diferente, pois possui quantidade diferente de salas
				re = JOptionPane.showOptionDialog(null, 
						"Escolha a sala", 
						"SALAS DO TERCEIRO ANDAR",
						JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, 
						null, 
						opcoes6, 
						opcoes6[0]);
				
				if(re != 14 && re != 15 && re != 16) {
					salaEscolhida = re + 86;
					sala= sala + salaEscolhida+" ";
					tamanho++;
				}
			}while(re != 14 && re != 15 && re != 16);
			break;
		}
		
		if(r == 17 || re == 14) {//CANCELAR
			sala = "";
			tamanho = 0;
			r=0;
			re=0;
			telaInicial();
		}
		
		if(r == 18 || re == 15) { //ESCOLHER MAIS UM ANDAR
			r=0;
			re=0;
			escolherAndar();
		}

		if(r == 19 || re == 16) { //SALVAR LISTA
			if(tamanho < 5) {
				JOptionPane.showMessageDialog(null, "Adicione mais "+(5-tamanho)+" salas, no m�nimo, para completar a lista!");
				r=0;
				re=0;
				escolherAndar();
			}
			r=0;
			re=0;
			salvarLista(sala);
		}
		
		JOptionPane.showMessageDialog(null, sala);
		
	}
	
	public static void salvarLista(String lista) {
		strSalas.append(lista+"; ");
		JOptionPane.showMessageDialog(null, "Listas salvas: "+ strSalas);
		sala = "";
		
		if(tamanho > tamanhoMaior)
			tamanhoMaior = tamanho;
		tamanho = 0;
		qtListas++;
		telaInicial();
		//Transformar aquela linha em um vetor e excluir os n�meros iguais

	}
	
	public static void criarListaUnica() {
		if(qtListas < 3) {
			JOptionPane.showMessageDialog(null, "Voc� precisa inserir pelo menos tr�s listas para efetuar essa a��o!");
		}
		else {
			
			//TEMPO
			//vetor que guarda os minutos de cada sala
			int tempoSalas[] = new int[98];
			int tempoTotal=0;
			
			//Preencher aleat�riamente com n�meros de 5 a 15
      //poderia ser um metodo que gera um array de numeros aleatorios e recebe a quantidade por parametro
      // private String[] geraTempoSalas(int quantidade) ...
			Random r = new Random();
			for(int i = 0; i < tempoSalas.length; i++)
			{
				tempoSalas[i] = r.nextInt(11)+5;
			}
			
			//mostrar tempo das sala
			for(int i=0; i< tempoSalas.length; i++)
				System.out.print(" - "+tempoSalas[i]);
			
			//SALAS
			//strSalas � a StringBuffer com todas as listas
			//Separar a strSalas em um vetor das listas --> vetListas
			
			//Transformar StringBuffer em String
			String Salas = strSalas.toString();
			
			//Separar a String Salas
			String vetListas[] = Salas.split("; ");
			
			//Separar cada linha da vetListas em uma linha para separar cada sala --> vetSalas
			String vetSalas[][] = new String[qtListas][tamanhoMaior];
			
			//N�mero total de salas
			int totalSalas=0;	
			
			//Criar String tempor�ria para armazenar determinada linha do vetor para a inserir no vetor final
			for(int l = 0; l < qtListas; l++) {
				String strTemp[] = vetListas[l].split(" ");
				
				for(int i=0; i< strTemp.length; i++) {
					vetSalas[l][i] = strTemp[i];
					totalSalas++;
				}
				
			}

			//Criar vetor �nico com quantidade total de salas
			int uniaoSalas[] = new int [totalSalas];
			
			int p=0; //posicao no vetor uniao
			int sala; //N�mero da sala como vari�vel inteira
			int j;
			boolean uniao= true;
			
			//Inserir os n�meros no vetor uniao seguindo por coluna
			for(int f=0; f < tamanhoMaior; f++) {
				for(int g = 0; g < qtListas; g++) {
					if(vetSalas[g][f] != null) {
						sala = Integer.valueOf(vetSalas[g][f]);
						
						j = 0;
						while((j<p) && (sala != uniaoSalas[j]))
							j++;
						
						if(j>= p) {
							uniaoSalas[p++] = sala;
							tempoTotal = tempoTotal + tempoSalas[sala-1];

						}

						
					}
				}
			}
			
			StringBuffer strUniao = new StringBuffer();
			//apresentar uniao
			for(int i=0; i < uniaoSalas.length;i++) {
				if(uniaoSalas[i]!= 0)
					strUniao.append(uniaoSalas[i]+ " ");
			}
			

			//Apresentacao do tempo
			int horas, minutos;
			
			horas = tempoTotal/60;
			minutos = tempoTotal % 60;
			
			System.out.println("Tempo total"+tempoTotal);
			System.out.println("horas"+horas);
			System.out.println("minutos"+minutos);
			
			
			JOptionPane.showMessageDialog(null, "Salas que precisam ser desinfetadas: "+strUniao);
			JOptionPane.showMessageDialog(null, "Demorar� "+horas+" horas: "+minutos+" minutos");
			telaInicial();
		}
	}


	public static void excluirLista() {
		JOptionPane.showMessageDialog(null, "EXCLUINDO...");
	}
}